services:
  db:
    container_name: app_db
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgre-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 1s
      timeout: 1s
      retries: 30
    networks:
      - private

  app:
    container_name: app_app
    build:
      context: .
      args:
        NEXT_PUBLIC_EDDSA_PUBLIC_KEY: ${NEXT_PUBLIC_EDDSA_PUBLIC_KEY}
    restart: always
    environment:
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public'
      EDDSA_PRIVATE_KEY: ${EDDSA_PRIVATE_KEY}
      FIRST_ADMIN_EMAIL: ${FIRST_ADMIN_EMAIL}
      FIRST_ADMIN_PASSWORD: ${FIRST_ADMIN_PASSWORD}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.entrypoints=websecure'
      - 'traefik.http.routers.app.rule=Host(`survey-labagora.e-cancer.fr`)'
      - 'traefik.http.routers.app.tls=true'
    networks:
      - private
      - proxy
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgre-data:

networks:
  private:
    external: false
  proxy:
    external: true
